{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks/UserLinks.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/Header/Navigation.jsx","webpack:///./src/components/Header/Header.jsx"],"names":["UserInfo","render","userTwitter","this","props","config","expanded","react_default","a","createElement","dist","username","options","count","Component","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","postNode","disqusShortname","post","frontmatter","url","urljoin","siteUrl","fields","slug","id","title","replace","main_default","shortname","identifier","onNewComment","SocialLinks","_this$props","postPath","mobile","iconSize","className","TwitterShareButton","TwitterIcon","round","size","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","filter","renderShareCount","TelegramShareButton","TelegramIcon","PostTemplate","pageContext","data","markdownRemark","category_id","postDefaultCategoryID","layout","Helmet_default","siteTitle","SEO","postSEO","Header","src","cover","dangerouslySetInnerHTML","__html","html","components_SocialLinks_SocialLinks","components_UserInfo_UserInfo","components_Disqus_Disqus","Footer","React","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","dateFromFormat","dateFormat","userName","userEmail","userLocation","userAvatar","userDescription","userLinks","label","iconClassName","icon","menuLink","name","link","copyright","themeColor","backgroundColor","substr","module","exports","UserLinks","getLinkElements","labeled","map","react__WEBPACK_IMPORTED_MODULE_1___default","key","href","MainLayout","children","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","_UserLinks_UserLinks__WEBPACK_IMPORTED_MODULE_3__","description","image","postURL","postMeta","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","type","JSON","stringify","property","Navigation","gatsby_browser_entry","to","open","isOpen","toggleNav","logo","isOpenAnim","onClick","react_responsive_default","maxWidth","dist_default","onClose","labelledby","height","returnFocusAfterClose","Header_Navigation","isMobile","navToggle","minWidth"],"mappings":"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","file":"component---src-templates-post-jsx-7d767eecf63e28a1ffc2.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Follow } from \"react-twitter-widgets\";\r\n\r\nclass UserInfo extends Component {\r\n  render() {\r\n    const { userTwitter } = this.props.config;\r\n    const { expanded } = this.props;\r\n    return (\r\n      <Follow\r\n        username={userTwitter}\r\n        options={{ count: expanded ? true : \"none\" }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","import React, { Component } from \"react\";\r\nimport ReactDisqusComments from \"react-disqus-comments\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass Disqus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: []\r\n    };\r\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\r\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\r\n  }\r\n\r\n  onSnackbarDismiss() {\r\n    const [, ...toasts] = this.state.toasts;\r\n    this.setState({ toasts });\r\n  }\r\n  notifyAboutComment() {\r\n    const toasts = this.state.toasts.slice();\r\n    toasts.push({ text: \"New comment available!\" });\r\n    this.setState({ toasts });\r\n  }\r\n  render() {\r\n    const { postNode } = this.props;\r\n    if (!config.disqusShortname) {\r\n      return null;\r\n    }\r\n    const post = postNode.frontmatter;\r\n    const url = urljoin(\r\n      config.siteUrl,\r\n      postNode.fields.slug\r\n    );\r\n    const id = post.title.replace(/\\s+/g,'');\r\n    return (\r\n      <ReactDisqusComments\r\n        shortname={config.disqusShortname}\r\n        identifier={id}\r\n        title={post.title}\r\n        url={url}\r\n        onNewComment={this.notifyAboutComment}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Disqus;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostTags extends Component {\r\n  render() {\r\n    const { tags } = this.props;\r\n    return (\r\n      <div className=\"post-tag-container\">\r\n        {tags &&\r\n          tags.map(tag => (\r\n            <Link\r\n              key={tag}\r\n              style={{ textDecoration: \"none\" }}\r\n              to={`/tags/${_.kebabCase(tag)}`}\r\n            >\r\n              <button>{tag}</button>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostTags;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  GooglePlusShareButton,\r\n  LinkedinShareButton,\r\n  TwitterShareButton,\r\n  TelegramShareButton,\r\n  RedditShareButton,\r\n  FacebookShareCount,\r\n  GooglePlusShareCount,\r\n  LinkedinShareCount,\r\n  RedditShareCount,\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  TelegramIcon,\r\n  GooglePlusIcon,\r\n  LinkedinIcon,\r\n  RedditIcon\r\n} from \"react-share\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport \"./SocialLinks.css\";\r\n\r\nclass SocialLinks extends Component {\r\n  render() {\r\n    const { postNode, postPath, mobile } = this.props;\r\n    const post = postNode.frontmatter;\r\n    const url = urljoin(config.siteUrl, postPath);\r\n    const iconSize = mobile ? 36 : 48;\r\n    const filter = count => (count > 0 ? count : \"\");\r\n    const renderShareCount = count => (\r\n      <div className=\"share-count\">{filter(count)}</div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"social-links\">\r\n        <TwitterShareButton url={url} title={post.title}>\r\n          <TwitterIcon round size={iconSize} />\r\n        </TwitterShareButton>\r\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\r\n          <FacebookIcon round size={iconSize} />\r\n          <FacebookShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </FacebookShareCount>\r\n        </FacebookShareButton>\r\n        <TelegramShareButton url={url}>\r\n          <TelegramIcon round size={iconSize} />\r\n        </TelegramShareButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialLinks;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport Header from \"../components/Header/Header\";\r\nimport Footer from '../components/Footer/Footer';\r\nimport UserInfo from \"../components/UserInfo/UserInfo\";\r\nimport Disqus from \"../components/Disqus/Disqus\";\r\nimport PostTags from \"../components/PostTags/PostTags\";\r\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\r\nimport SEO from \"../components/SEO/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./b16-tomorrow-dark.css\";\r\nimport \"./post.css\";\r\n\r\nexport default class PostTemplate extends React.Component {\r\n  render() {\r\n    const { slug } = this.props.pageContext;\r\n    const postNode = this.props.data.markdownRemark;\r\n    const post = postNode.frontmatter;\r\n    if (!post.id) {\r\n      post.id = slug;\r\n    }\r\n    if (!post.category_id) {\r\n      post.category_id = config.postDefaultCategoryID;\r\n    }\r\n    return (\r\n        <Layout>\r\n        <div className=\"index-container\">\r\n          <Helmet>\r\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n          <Header config={config}/>\r\n          <div className=\"post-container\">\r\n            <h1 className=\"post-container__title\">{post.title}</h1>\r\n            <img className=\"post-container__hero\" src={post.cover} />\r\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\r\n            <div className=\"post-meta\">\r\n              <SocialLinks postPath={slug} postNode={postNode} />\r\n            </div>\r\n            <UserInfo config={config} />\r\n            <Disqus postNode={postNode} />\r\n          </div>\r\n          <Footer config={config} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n        category\r\n        tags\r\n        description\r\n      }\r\n      fields {\r\n        nextTitle\r\n        nextSlug\r\n        prevTitle\r\n        prevSlug\r\n        slug\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const config = {\r\n  siteTitle: \"Kurinsu\", // Site title.\r\n  siteTitleShort: \"Kurinsu\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: \"Kurinsu\", // Alternative site title for SEO.\r\n  siteLogo: \"/logos/logo.png\", // Logo used for SEO and manifest.\r\n  siteUrl: \"https://kurinsu.com\", // Domain of your website without pathPrefix.\r\n  pathPrefix: \"\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\r\n  siteDescription: \"Développement personnel, inspiration et productivité.\", // Website description used for RSS feeds/meta description tag.\r\n  siteRss: \"/rss.xml\", // Path to the RSS file.\r\n  siteFBAppID: \"\", // FB Application ID for using app insights\r\n  googleAnalyticsID: \"UA-59515367-9\", // GA tracking ID.\r\n  disqusShortname: \"kurinsu\", // Disqus shortname.\r\n  postDefaultCategoryID: \"developpement\", // Default category for posts.\r\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\r\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\r\n  userName: \"Cala\", // Username to display in the author segment.\r\n  userEmail: \"hello@kurinsu.com\", // Email used for RSS feed's author segment\r\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\r\n  userLocation: \"\", // User location to display in the author segment.\r\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\r\n  userDescription:\r\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  userLinks: [\r\n    {\r\n      label: \"Insta\",\r\n      url: \"https://instagram.com/kurinsu\",\r\n      iconClassName: \"fa fa-instagram\",\r\n      icon: \"/icons/instagram.svg\"\r\n    },\r\n    {\r\n      label: \"Twitter\",\r\n      url: \"https://twitter.com/kurinsu\",\r\n      iconClassName: \"fa fa-twitter\",\r\n      icon: \"/icons/twitter.svg\"\r\n    },\r\n    {\r\n      label: \"Facebook\",\r\n      url: \"https://facebook.com/kurinsu\",\r\n      iconClassName: \"fa fa-envelope\",\r\n      icon: \"/icons/facebook.svg\"\r\n    }\r\n  ],\r\n  menuLink: [\r\n    {\r\n      name: 'home',\r\n      link: '/'\r\n    },\r\n    {\r\n      name: 'productivite',\r\n      link: '/productivite'\r\n    },\r\n    {\r\n      name: 'inspiration',\r\n      link: '/inspiration'\r\n    },\r\n    {\r\n      name: 'developpement',\r\n      link: '/developpement'\r\n    },\r\n    {\r\n      name: 'newsletter',\r\n      link: '#newsletter'\r\n    }\r\n  ],\r\n  copyright: \"Copyright © 2019. Kurinsu\", // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\r\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\r\n};\r\n\r\n// Validate\r\n\r\n// Make sure pathPrefix is empty if not needed\r\nif (config.pathPrefix === \"/\") {\r\n  config.pathPrefix = \"\";\r\n} else {\r\n  // Make sure pathPrefix only contains the first forward slash\r\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\r\n}\r\n\r\n// Make sure siteUrl doesn't have an ending forward slash\r\nif (config.siteUrl.substr(-1) === \"/\")\r\n  config.siteUrl = config.siteUrl.slice(0, -1);\r\n\r\n// Make sure siteRss has a starting forward slash\r\nif (config.siteRss && config.siteRss[0] !== \"/\")\r\n  config.siteRss = `/${config.siteRss}`;\r\n\r\nmodule.exports = config;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./UserLinks.css\";\r\n\r\n\r\nclass UserLinks extends Component {\r\n  getLinkElements() {\r\n    const { userLinks } = this.props.config;\r\n    const { labeled } = this.props;\r\n    return userLinks.map(link => (\r\n      <a className=\"user-links\" key={link.label} href={link.url}>\r\n        <img src={link.icon} className=\"user-links__social\"/>\r\n      </a>\r\n    ));\r\n  }\r\n  render() {\r\n    const { userLinks } = this.props.config;\r\n    if (!userLinks) {\r\n      return null;\r\n    }\r\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\r\n  }\r\n}\r\n\r\nexport default UserLinks;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./index.css\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <Helmet>\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport UserLinks from \"../UserLinks/UserLinks\";\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    const { config } = this.props;\r\n    const url = config.siteRss;\r\n    const { copyright } = config;\r\n    if (!copyright) {\r\n      return null;\r\n    }\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"notice-container\">\r\n          <span>Made with ❤️️ in 🇪🇺 {copyright}</span>\r\n        </div>\r\n        <UserLinks config={config} labeled />\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport UserLinks from \"../UserLinks/UserLinks\";\r\nimport OffCanvas from 'react-aria-offcanvas';\r\nimport \"./Header.css\";\r\n\r\nclass Navigation extends Component {\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const url = config.menuLink;\r\n    return (\r\n        <nav id=\"menu\">\r\n        <ul className=\"primary-nav__items\">\r\n            <li className=\"item\"><Link to={url[0].link}>🏠 ACCUEIL</Link></li> \r\n            <li className=\"item\"><Link to={url[1].link}>⚙️ PRODUCTIVITÉ</Link></li>\r\n            <li className=\"item\"><Link to={url[2].link}>💡 INSPIRATION</Link></li>\r\n            <li className=\"item no-margin\"><Link to={url[3].link}>🕊️ DÉVELOPPEMENT</Link></li>\r\n        </ul>\r\n        </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Navigation from './Navigation';\r\nimport MediaQuery from 'react-responsive';\r\nimport OffCanvas from 'react-aria-offcanvas';\r\nimport UserLinks from \"../UserLinks/UserLinks\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  open = () => {\r\n    this.setState({ isOpen: !this.state.isOpen })\r\n  }\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    const url = config.menuLink;\r\n    const { copyright } = config;\r\n    const logo = config.siteLogo;\r\n    if (!copyright) {\r\n      return null;\r\n    }\r\n    const isOpen = this.state.isOpen ? 'primary-nav visible' : 'primary-nav hidden';\r\n    const isOpenAnim = this.state.isOpen ? 'nav-toggle__bar half half_left' : 'nav-toggle__bar half';\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header--container\">\r\n        <div className=\"header__mobile\">\r\n          <Link to={url[0].link}><img className=\"logo\" src={logo} /></Link>\r\n          <div className=\"nav-toggle\" onClick={this.open}>\r\n            <div className=\"nav-toggle__bar\"></div>\r\n            <div className={isOpenAnim}></div>\r\n            <div className=\"nav-toggle__bar\"></div>\r\n          </div>\r\n          </div>\r\n          <MediaQuery maxWidth={1100}>\r\n            <OffCanvas\r\n              isOpen={this.state.isOpen}\r\n              onClose={this.open}\r\n              labelledby=\"nav-toggle\"\r\n              height={\"100vh\"}\r\n              className={'nav__offCanvas'}\r\n              returnFocusAfterClose={false}\r\n              >\r\n                <Navigation config={config} isMobile={true} navToggle={this.open}/>\r\n                <div onClick={this.open} className=\"close\"></div>\r\n              </OffCanvas>\r\n          </MediaQuery>\r\n          <MediaQuery minWidth={1101}>\r\n            <Navigation config={config} isMobile={false} navToggle={this.open}/>\r\n          </MediaQuery>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n"],"sourceRoot":""}